chore: 审计并精简 Cargo 依赖与特性

移除未使用的依赖，优化特性配置，减少编译时间与维护负担。

## 变更内容

### 移除的依赖
- async-channel: 代码中完全未使用
- bytes: 代码中完全未使用  
- futures-lite: 已用 smol::io 提供的 I/O trait 替代

### 优化的依赖
- serde_json: 禁用默认特性，仅启用 std
- url: 禁用默认特性，减少编译时依赖

### 代码调整
- 将 futures_lite::{AsyncReadExt, AsyncWriteExt} 替换为 smol::io
- 更新 src/handlers.rs 和 src/http_client.rs 的导入语句
- 更新测试代码的导入语句

## 效果
- 直接依赖从 15 个减少到 12 个 (20% 减少)
- 所有 16 个单元测试全部通过
- 编译和运行时功能保持完整
- 减少依赖树深度，缩短编译时间

## 文档更新
- README.md: 新增核心依赖说明章节
- CLAUDE.md: 更新架构说明与依赖管理原则
- 新增 CHANGELOG.md: 详细变更日志
- 新增 DEPENDENCY_AUDIT.md: 完整审计报告
- 新增 AUDIT_SUMMARY.md: 工作总结

## 验证
✅ cargo build --release
✅ cargo test (16/16 通过)
✅ cargo tree (确认依赖已移除)
✅ 功能测试 (服务正常启动)
